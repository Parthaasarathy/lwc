Here's a comprehensive document covering all the responses provided. You can use this as a study guide or prepare answers based on it.


---

Salesforce Client Interview Preparation

Lightning Related Questions

1. Any Lightning Upgrade?

Salesforce regularly upgrades Lightning with new features, like Einstein AI enhancements, Lightning Web Security, Dynamic Forms, and Actions, improving performance, flexibility, and customization.



2. What is LDS (Lightning Data Service) and what does it do?

LDS simplifies CRUD operations by providing a declarative approach, caching data, reducing server requests, and ensuring data consistency across components.



3. Having LDS benefits LWC?

LDS enhances LWC by enabling declarative data management, reducing load times, and ensuring secure, efficient data access.



4. LMS (Lightning Message Service)

LMS allows cross-component communication, enabling data sharing among Aura and LWC components and supporting modular, flexible application design.



5. What is Lightning Data Service?

LDS is a client-side caching service for data operations, ensuring secure, fast access and reducing server load.



6. Aura and LWC Difference?

Aura is the older framework with more boilerplate code. LWC is a modern framework that uses native web standards, providing better performance and simpler coding.



7. Performance - how were they fixed?

Techniques like lazy loading, LDS, and optimizations to component load times and back-end efficiency were employed to enhance Lightning’s performance.



8. Difference between OmniScript and LWC?

OmniScript is a declarative tool for complex workflows in specific industries, while LWC is a flexible, general-purpose component framework.



9. What is DOM and Shadow DOM?

DOM is the tree structure of a web page’s elements. Shadow DOM provides encapsulation within web components, ensuring modularity and preventing style conflicts.



10. LWC Lifecycle Hooks?

Lifecycle hooks in LWC include connectedCallback(), disconnectedCallback(), renderedCallback(), and errorCallback(), managing component behavior.



11. How to communicate between two LWCs?

Communication can be done via public properties, custom events, LMS, or the Pub-Sub model.



12. LWC Best Practices?

Follow modularity, use LDS for data, utilize Shadow DOM, avoid complex JavaScript in templates, and optimize reactivity with decorators (@api, @track, @wire).





---

Apex and Flows Related Questions

1. Lead - what is the day in/out activities?

Activities include lead tracking, qualification, source analysis, and follow-ups, with automation using Flows and Process Builder for efficiency.





---

Technical Salesforce Questions

1. Test Coverage Standards

Salesforce mandates 75% test coverage for production deployment, though 90-95% is preferable for quality.



2. Handling Test Case Failures during Deployment

Debugging in the Developer Console, modifying test data, and fixing logic errors ensures successful deployment.



3. Trigger Best Practices

Use one trigger per object, handle logic in handler classes, avoid recursion, and follow SOQL/DML best practices.



4. Apex Actions

Apex actions allow server-side logic handling, used in Lightning components and flows.



5. Asynchronous Apex

Asynchronous methods handle resource-heavy tasks in the background, improving performance.



6. Apex Job Queues

Job queues manage asynchronous operations, ensuring systematic execution of batch and scheduled jobs.



7. Scheduling Apex Jobs

Schedule Apex jobs using System.schedule with CRON or Salesforce’s Setup UI.



8. Setting up Security for Apex Classes

Use with sharing/without sharing and check object/field-level security programmatically.



9. Choosing Code/Flow/Process Builder/Trigger

Choice depends on complexity; Flows for complex processes, Process Builder for simple tasks, and Triggers for advanced needs.



10. Recommended Flows per Object

One record-triggered flow per object per context to avoid conflicts.



11. Triggers per Object

Only one trigger per object is recommended for simplicity and conflict avoidance.



12. Coding Practice for High Test Coverage

Write comprehensive tests covering all paths, use System.assert for validation, and avoid hardcoding.



13. Code Review Practices for Quality

Review naming conventions, performance, security, and adherence to best practices.



14. Avoiding Governor Limits

Bulkify code, use asynchronous processing, cache data, and avoid SOQL in loops.



15. Handling Multiple Criteria in a Flow

Use decision elements, nested decisions, and formula fields for complex criteria.



16. Avoiding Processing Limits in Code

Optimize SOQL, batch DML, and use collections; leverage asynchronous processing for intensive tasks.



17. Future Methods

Asynchronous, background methods for callouts and heavy tasks, reducing transaction limits.



18. Migration Tools

Tools include Change Sets, Salesforce CLI, ANT Migration Tool, and GitHub for version control.





---

Integration Related Questions

1. Types of Integrations Performed

Real-time (REST/SOAP), Platform Events, and Outbound Messages for cross-system data consistency.



2. Outbound Message Destinations

Used in ERP/inventory systems, customized as needed.



3. Composite API

Combines multiple requests in one API call, improving performance.



4. Publishing Data to External Systems

Used outbound messaging and Platform Events for data synchronization.



5. Sales Cloud Challenge with SOAP Integration

Solution: Middleware like MuleSoft to bridge SOAP with Salesforce REST for secure, compatible communication.



6. Outbound Messages with REST API

Outbound messages are SOAP-based; for REST, use HttpRequest in Apex for custom payloads.





---

Agile Related Questions

1. What is Agile?

Agile is an iterative, collaborative, and flexible project management approach.



2. How Agile Works

Operates in sprints with planning, development, testing, and review cycles for continuous improvement.



3. Involvement in Story Sizing

Used planning poker for story points based on effort and complexity.





---

Velocity (Salesforce Industries) Questions

1. Data Raptors in Sales Cloud

Used for ETL operations, performing data retrieval, transformation, and updates.



2. OmniStudio Sync with Other Systems

Uses Integration Procedures and DataRaptors for real-time syncing with external systems.



3. Flows and Business Implementation in Velocity

OmniScripts for guided flows, Integration Procedures, and FlexCards for data management and display.



4. Outbound Calls with DataRaptors

Outbound calls are generally done via Integration Procedures, as DataRaptors handle internal data.





---

Config Related Questions

1. Permission Sets Usage

Managed user access to objects, fields, and features flexibly.



2. Defining Role Security

Uses hierarchical role structure, allowing managers access to team members' records.



3. Difference Between Sharing Rules and Permission Sets

Sharing rules extend record access, while Permission Sets manage object/field-level access.



4. Salesforce Instances

Refers to geographically located servers (e.g., NA, EU, AP) to optimize data locality.





---

General Salesforce and Career Questions

1. UI Refresh Mechanism

Achieved via LDS for caching and real-time updates through Platform Events/Streaming API.



2. Career Goals

Looking to deepen Salesforce expertise, explore AI-driven insights, and take on leadership roles.



3. Deployment Process

Used Change Sets, Salesforce CLI, ANT Migration Tool, and GitHub for deployment and version control.



4. ANT Tool and GitHub

ANT scripting for deployment automation; GitHub for version control and collaboration.



5. DataLoader CLI

Command-line tool for bulk data operations, supporting automation and scheduled tasks.





---

These responses provide a solid foundation to help you excel in your interview. Tailor each answer with examples from your own experience to make them even more impactful. Good luck!

